<?php

require_once "../../DAO/Tipo_ChamadoDAO.php";
require_once "../../Model/Tipo_Chamado.php";

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-31 at 01:51:10.
 */
class Tipo_ChamadoDAOTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Tipo_ChamadoDAO
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Tipo_ChamadoDAO();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        unset($this->object);
    }

    /**
     * @covers Tipo_ChamadoDAO::inserirTipo_Chamado
     * @todo   Implement testInserirTipo_Chamado().
     */
    public function testInserirTipo_Chamado() {
        $tipo_chamado = new Tipo_Chamado(NULL, "Periferico");
        $resultado = $this->object->inserirTipo_Chamado($tipo_chamado);
        $this->assertTrue(true, $resultado, "Nao foi possivel inserir o tipo_chamado no BD!");
    }
    
    public function testAlterartipo_chamado() {
       $tipo_chamado = new Tipo_Chamado(NULL, "Software");
       $resultado = $this->object->alterarTipo_Chamado($tipo_chamado, 1);
       $this->assertTrue(true, $resultado, "Nao foi possivel alterar O tipo_chamado!");
    }
     
    public function testObterTipo_Chamado_Especifico() {
        $resultado = $this->object->obterTipo_Chamado_Especifico(1);
        if ($resultado!=false)
            $resultado = true;
        $this->assertTrue(true, $resultado, "Nao foi possivel obter o tipo_chamado especifico!");
    }
     
    public function testObterTipo_Chamado_Geral() {
       $resultado = $this->object->obterTipo_Chamado_Geral();
       foreach($resultado as $row){
            $this->assertArrayHasKey("cod", $row, "Nao foi possivel retornar todos os campos!");
            $this->assertArrayHasKey("descricao", $row, "Nao foi possivel retornar todos os campos!");
        }
    }
    
    public function testDeletarTipo_Chamado() {
      $resultado = $this->object->deletarTipo_Chamado(1);
       $this->assertTrue(true, $resultado, "Impossivel deletar tipo_chamado!");
    }
    
    public function testFechaConexão() {
        $resultado = $this->object->fechaConexão();
       $this->assertEquals(NULL, $resultado, "Impossivel fechar conexao!");
    }

}
