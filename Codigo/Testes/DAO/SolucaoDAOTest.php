<?php

error_reporting(0);
ini_set("display_errors", 0);

require_once "../../DAO/SolucaoDAO.php";
require_once "../../Model/Solucao.php";

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-30 at 21:36:12.
 */
class SolucaoDAOTest extends PHPUnit_Framework_TestCase {

    /**
     * @var SolucaoDAO
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new SolucaoDAO();
    }

    public function testConstrutor() {
        $resultado = $this->object;
        $this->assertNotNull($resultado);
    }
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        unset($this->object);
    }

    /**
     * @covers SolucaoDAO::inserirSolucao
     * @todo   Implement testInserirSolucao().
     */
    public function testInserirSolucao() {
        $solucao = new Solucao(NULL, "Apenas um teste.", NULL);
        $resultado = $this->object->inserirSolucao($solucao);
        $this->assertTrue(true, $resultado, "Nao foi possivel inserir a solucao no BD!");
        
    }

    /**
     * @covers SolucaoDAO::alterarSolucao
     * @todo   Implement testAlterarSolucao().
     */
    public function testAlterarSolucao() {
       $solucao = new Solucao(NULL, "Apenas um teate.", NULL);
       $resultado = $this->object->alterarSolucao($solucao, 1);
       $this->assertTrue(true, $resultado, "Nao foi possivel alterar a solucao!");
    }

    /**
     * @covers SolucaoDAO::obterSolucao_Especifico
     * @todo   Implement testObterSolucao_Especifico().
     */
    public function testObterSolucao_Especifico() {
        $resultado = $this->object->obterSolucao_Especifico(1);
        if ($resultado!=false)
            $resultado = true;
        $this->assertTrue(true, $resultado, "Nao foi possivel obter a solucao especifica!");
    }

    /**
     * @covers SolucaoDAO::obterSolucao_Geral
     * @todo   Implement testObterSolucao_Geral().
     */
    public function testObterSolucao_Geral() {
        $resultado = $this->object->obterSolucao_Geral();
        foreach($resultado as $row){
            $this->assertArrayHasKey("cod", $row, "Nao foi possivel retornar todos os campos!");
            $this->assertArrayHasKey("chamado_cod", $row, "Nao foi possivel retornar todos os campos!");
            $this->assertArrayHasKey("descricao", $row, "Nao foi possivel retornar todos os campos!");
            $this->assertArrayHasKey("data_solucao", $row, "Nao foi possivel retornar todos os campos!");
            
        }
    }

    /**
     * @covers SolucaoDAO::deletarSolucao
     * @todo   Implement testDeletarSolucao().
     */
    public function testDeletarSolucao() {
       $resultado = $this->object->deletarSolucao(1);
       $this->assertTrue(true, $resultado, "Impossivel deletar solucao!");
    }

    /**
     * @covers SolucaoDAO::fechaConex達o
     * @todo   Implement testFechaConex達o().
     */
    public function testFechaConex達o() {
       $resultado = $this->object->fechaConex達o();
       $this->assertEquals(NULL, $resultado, "Impossivel fechar conexao!");
    }

}
