<?php

error_reporting(0);
ini_set("display_errors", 0);

require_once "../../controller/UsuarioCtrl.php";
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-27 at 19:02:09.
 */
class UsuarioCtrlTest extends PHPUnit_Framework_TestCase {

    /**
     * @var UsuarioCtrl
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new UsuarioCtrl();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        unset($this->object);
    }

    /**
     * @covers UsuarioCtrl::insUsuario
     * @todo   Implement testInsUsuario().
     */
    public function testInsUsuario() {
        $resultado = $this->object->insUsuario("lucascouto", "12345", "meuemail@gmail.com", "Lucas Couto", 100112048, 1);
        $this->assertEquals(true, $resultado, "A inserção do usuário no BD falhou!");
    }

    
    

    /**
     * @covers UsuarioCtrl::listaUsuario
     * @todo   Implement testListaUsuario().
     */
    public function testListaUsuario() {
        $resultado = $this->object->listaUsuario();
        foreach ($resultado as $row){
            $this->assertArrayHasKey("login", $row, "A listagem de todos os usuários falhou!");
            $this->assertArrayHasKey("senha", $row, "A listagem de todos os usuários falhou!");
            $this->assertArrayHasKey("email", $row, "A listagem de todos os usuários falhou!");
            $this->assertArrayHasKey("nome", $row, "A listagem de todos os usuários falhou!");
            $this->assertArrayHasKey("matricula", $row, "A listagem de todos os usuários falhou!");
            $this->assertArrayHasKey("perfil_cod", $row, "A listagem de todos os usuários falhou!");
        }
        
    }
    
    

    /**
     * @covers UsuarioCtrl::alteraUsuario
     * @todo   Implement testAlteraUsuario().
     */
    public function testAlteraUsuario() {
        $resultado = $this->object->alteraUsuario("joao", 12345, "joao@hotmail.com", "Joao Silva", 100112048, 1, "lucascouto");
        $this->assertEquals(true, $resultado, "A alteração nos dados do usuário falhou!");
    }

    /**
     * @covers UsuarioCtrl::obterUsuario_Especifico
     * @todo   Implement testObterUsuario_Especifico().
     */
    public function testObterUsuario_Especifico() {
       $resultado = $this->object->obterUsuario_Especifico("joao");
       if($resultado!=false)
           $resultado = true;
       $this->assertEquals(true, $resultado, "A obtenção do usuaŕio falhou!");
      
    }

    /**
     * @covers UsuarioCtrl::getNumCols
     * @todo   Implement testGetNumCols().
     */
    public function testGetNumCols() {
       $resultado = $this->object->getNumCols();
       $this->assertEquals(6, $resultado, "A consulta retornou um número incorreto de campos");
    }
    
    
    /**
     * @covers UsuarioCtrl::delUsuario
     * @todo   Implement testDelUsuario().
     */
    public function testDelUsuario() {
        $resultado = $this->object->delUsuario("lucascouto");
        $this->assertEquals(true, $resultado, "A remoção do usuário do BD falhou!");
    }

}
